/* This file was generated by SableCC (http://www.sablecc.org/). */

package simpleAdder.analysis;

import simpleAdder.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);

    void caseTPrograma(TPrograma node);
    void caseTInteiro(TInteiro node);
    void caseTReal(TReal node);
    void caseTCaractere(TCaractere node);
    void caseTBooleano(TBooleano node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTPara(TPara node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTTinteiro(TTinteiro node);
    void caseTTreal(TTreal node);
    void caseTTcaractere(TTcaractere node);
    void caseTTbooleano(TTbooleano node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTPontovirgula(TPontovirgula node);
    void caseTIdentificador(TIdentificador node);
    void caseTString(TString node);
    void caseTAparentese(TAparentese node);
    void caseTFparentese(TFparentese node);
    void caseTAcolchete(TAcolchete node);
    void caseTFcolchete(TFcolchete node);
    void caseTDoispontos(TDoispontos node);
    void caseTVirgula(TVirgula node);
    void caseTComentariolinha(TComentariolinha node);
    void caseTComentario(TComentario node);
    void caseTCommentEnd(TCommentEnd node);
    void caseTCommentBody(TCommentBody node);
    void caseTOpsoma(TOpsoma node);
    void caseTOpsub(TOpsub node);
    void caseTOpmul(TOpmul node);
    void caseTOpdiv(TOpdiv node);
    void caseTMaiorq(TMaiorq node);
    void caseTMenorq(TMenorq node);
    void caseTMaigualq(TMaigualq node);
    void caseTMeigualq(TMeigualq node);
    void caseTIgual(TIgual node);
    void caseTEbooleano(TEbooleano node);
    void caseTOubooleano(TOubooleano node);
    void caseTNaobooleano(TNaobooleano node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
