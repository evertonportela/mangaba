/* simpleAdder.sable - A very simple program that recognizes two integers being added. */ 
Package simpleAdder ; 
     
Helpers 
    /* Our helpers */ 
    numeros = ['0' .. '9'] ; 
    sp = ' ' ; 
    nl = 10 ; 
    underscore = '_' ;
	letra = [['a' .. 'z'] + ['A' .. 'Z']];
	all = [0 .. 0xffff];
	verdadeiro = 'verdadeiro';
	falso = 'falso';
	
States
	normal,
	comentario;
	
	
	
Tokens 

/* Our simple token definition(s). */
	
	/* Demais reservadas */
	{normal} programa = 'programa';
	{normal} inteiro = 'inteiro'; 
	{normal} real = 'real';
	{normal} caractere = 'caractere';
	{normal} booleano = 'booleano';
	{normal} inicio = 'inicio';
	{normal} fim = 'fim';
	{normal} se = 'se';
	{normal} senao = 'senao';
	{normal} enquanto = 'enquanto';
	{normal} para = 'para';
	{normal} avalie = 'avalie';
	{normal} caso = 'caso';



	/* tipos */
	{normal}    tinteiro = numeros+ sp*; 
	{normal}    treal = numeros+ ',' numeros+;
	{normal}	tcaractere = ''' (letra | numeros | underscore | sp) ''';
	{normal} 	tbooleano = (verdadeiro | falso);
	
	
	
	
	{normal}	atribuicao = '<-';
	/*id_numerico = (integer | real); */
	{normal}    pontovirgula = ';' nl?; 
	{normal}	identificador = (letra | underscore) (letra | underscore | numeros)*;
	{normal}	string = ''' (letra | numeros | underscore)* ''';
	{normal}	aparentese = '(';
	{normal}	fparentese = ')';
	{normal}	acolchete = '[';
	{normal}	fcolchete = ']';
	{normal}	doispontos = ':';
	{normal}	virgula = ',';
	
	{normal}	comentariolinha = '/' '/' all* nl;
	
	
/* Comentarios bloco */	
	{normal->comentario, comentario}	comentario = '/' '*';
	{comentario} comment_end = '*' '/';
	{comentario} comment_body = [all - ['*' + '/']]*;
	

	
/* Operadores aritmeticos */	
	{normal} opsoma = '+' sp*;
	{normal} opsub = '-' sp*;
	{normal} opmul = '*'sp*;
	{normal} opdiv = '/'sp*;

/* Operadores relacionais */
	{normal} maiorq = '>';
	{normal} menorq = '<';
	{normal} maigualq = '>=';
	{normal} meigualq = '<=';
	{normal} igual = '=';
	
/* Operadores booleanos */
	{normal} ebooleano = 'e';
	{normal} oubooleano = 'ou';
	{normal} naobooleano = 'nao';
	

	
	blank = (' ' | 13 | 10 | 09)+;
	
Ignored Tokens
	blank;
		
 Productions 
    /* Our super-simple grammar */ 
    program = [left]:inteiro opsoma [right]:inteiro pontovirgula; 
